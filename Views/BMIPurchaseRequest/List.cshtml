@model Balimoon_E_Procurement.Models.BalimoonBMI.ViewModel.PurchaseRequestBMIVM
@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2>Balimoon Indonesia</h2>
<section class="content">
    <div class="card">
        <div class="row">
            <div class="col-12">
                <div class="card-header">
                    <h3 class="card-title">
                        List of Balimoon Indonesia PR
                    </h3>
                </div>
                <div class="card-body">
                    <table id="tabel5" class="table table-bordered table-striped table-responsive-md table-responsive-sm" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>PR Header ID</th>
                                <th>Document No</th>
                                <th>Requster</th>
                                <th>Department</th>
                                <th>Order Date</th>
                                <th>Due Date</th>
                                <th>Notes</th>
                                <th>Details</th>
                            </tr>
                        </thead>
                        <tbody id="SetPRList"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <script>
        $.fn.dataTable.moment("DD/MM/YYYY HH:mm:ss");
        $.fn.dataTable.moment("DD/MM/YYYY");

        $("#tabel5").DataTable({
            //Design Layout
            stateSave: true,
            autoWidth: true,

            //ServerSide
            processing: true,
            serverSide: true,

            //Paging Setup
            paging: true,

            //searching Setup
            searching: { regex: true },

            //ajax Filter
            ajax: {
                url: "/BMIPurchaseRequest/GetPRList",
                //"dataSrc": '',
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    return JSON.stringify(d);
                }
            },

            //column definition
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                {
                    targets: "trim",
                    render: function (data, type, full, meta) {
                        if (type === "display") {
                            data = strtrunc(data, 10);
                        }
                        return data;
                    }
                },
                { targets: "data-type", type: "date-eu" }
            ],

            columns: [
                { data: "RequisitionHeaderId", name: "RequisitionHeaderId", isIdentity: true, visible: false },
                { data: "RequisitionNo", name: "RequisitionNo" },
                { data: "RequesterId", name: "RequesterId" },
                { data: "ShortcutDimension1Code", name: "ShortcutDimension1Code" },
                {
                    data: "OrderDate", render: function (data, type, row) {
                        if (type === "display" || type === "filter") {
                            return moment(data).format("dddd, DD-MM-YYYY HH:mm:ss");
                        }
                        return data;
                    }
                },
                {
                    data: "DueDate",
                    render: function (data, type, row) {
                        if (type === "display" || type === "filter") {
                            return moment(data).format("dddd, DD-MM-YYYY HH:mm:ss");
                        }
                        return data;
                    }
                },
                { data: "RequestNotes", name: "RequestNotes" },

                {
                    render: function (data, type, full, meta) {
                        return "<a href='#' onclick='PRDetails(\"" + full.RequisitionHeaderId + "\")' class='btn btn-outline-info'><span class='pe-7s-info'> Details</span></a>";
                    }
                }
            ]
        })
        $(".dataTables_scrollHeadInner").css({"width":"100%"});
        $(".table ").css({"width":"100%"});

        //show detail PR to PopUp Modal Dialog
        function PRDetails(RequisitionHeaderId) {
            var url = "/BMIPurchaseRequest/GetPR?RequisitionHeaderId=" + RequisitionHeaderId;
            $("#exampleModalLongTitle").html("Detail PR");
            $("#MyLargeModal").modal();
            $.ajax({
                type: "GET",
                url: url,
                success: function (data) {
                    var obj = JSON.parse(data);
                    $("#RequisitionHeaderId").val(obj.RequisitionHeaderId);
                    $("#RequisitionNo").val(obj.RequisitionNo);
                    $("#RequesterID").val(obj.RequesterID);
                    $("#ShortcutDimension1Code").val(obj.ShortcutDimension1Code);
                    $("#OrderDate").val(obj.OrderDate);
                    $("#DueDate").val(obj.DueDate);
                    $("#RequestNotes").val(obj.RequestNotes);
                    $("#Status").val(obj.Status);
                    $("#Priority").val(obj.Priority);
                }
            })
            //Get PR Line with JSON (Modal Tabel)
            $("#tabel6").DataTable({
            //Design Layout
                stateSave: true,
                autoWidth: true,

            //ServerSide
                processing: true,
                serverSide: true,

            //Paging Setup
                paging: true,

            //searching Setup
                searching: { regex: true },

            //ajax Filter
                ajax: {
                    url: "/BMIPurchaseRequest/GetPRDetails?RequisitionHeaderId=" +RequisitionHeaderId,
                    //"dataSrc": '',
                    type: "POST",
                    contentType: "application/json",
                    dataType: "json",
                    data: function (d) {
                        return JSON.stringify(d);
                    }
                },

            //column definition
                columnDefs: [
                    { targets: "no-sort", orderable: false },
                    { targets: "no-search", searchable: false },
                    {
                        targets: "trim",
                        render: function (data, type, full, meta) {
                            if (type === "display") {
                                data = strtrunc(data, 10);
                            }
                            return data;
                        }
                    },
                    { targets: "data-type", type: "date-eu" }
                ],

                columns: [
                    { data: "DocumentNo" },
                    { data: "Description" },
                    { data: "Quantity" },
                    { data: "UnitCost", render: $.fn.dataTable.render.number(',', '.', 2) },
                    { data: "CostAmount", render: $.fn.dataTable.render.number(',', '.', 2) }
                ],
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api(), data;
                    var numFormat = $.fn.dataTable.render.number( '\,', '.', 2 ).display;
                    //Get Integer Data
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };
                    //Sum All Pages
                    total = api
                        .column(4)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);
                    // Sum Current Page
                    pageTotal = api
                        .column(4, { page: 'current'})
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);
                    // Update footer 1
                    $( api.column( 4 ).footer() ).html(
                        numFormat(total)
                    );
                }
            })
            $(".dataTables_scrollHeadInner").css({"width":"100%"});
            $(".table ").css({"width":"100%"});
        }

        //on close event 
        $('#MyLargeModal').on('hidden.bs.modal', function () {
        $('#tabel6').dataTable().fnDestroy();
        $(this)
            .find("input[type=text],input[type=email],textarea,select")
            .val('')
            .end()
            .find("input[type=checkbox], input[type=radio]")
            .prop("checked", "")
            .end();
        })
    </script>
}

@section Styles{
    <div class="modal fade bd-example-modal-lg" id="MyLargeModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="exampleModalLongTitle"></h4>
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                </div>
                <div class="modal-body">
                    <form id="form">
                        <fieldset id="SubmitForm">
                            @Html.HiddenFor(a => a.HeaderTbl.RequisitionHeaderId, new { @id = "RequisitionHeaderId" })
                            <div class="form-group">
                                <label>Purchase Request No</label>
                                @Html.TextBoxFor(a => a.HeaderTbl.RequisitionNo, new { @id = "RequisitionNo", @class = "form-control", @readonly = "readonly" })
                            </div>
                            <div class="form-row">
                                <div class="col-md-6">
                                    <label>Requester</label>
                                    @Html.TextBoxFor(a => a.HeaderTbl.RequesterId, new { @id = "RequesterID", @class = "form-control", @readonly = "readonly" })
                                </div>
                                <div class="col-md-6">
                                    <label>Department</label>
                                    @Html.TextBoxFor(a => a.HeaderTbl.ShortcutDimension1Code, new { @id = "ShortcutDimension1Code", @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6">
                                    <label>Order Date</label>
                                    @Html.TextBoxFor(a => a.HeaderTbl.OrderDate, new { Type = "datetime-local", @id = "OrderDate", @class = "form-control", @readonly = "readonly" })
                                </div>
                                <div class="col-md-6">
                                    <label>Due Date</label>
                                    @Html.TextBoxFor(a => a.HeaderTbl.DueDate, new { Type = "datetime-local", @id = "DueDate", @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Notes</label>
                                @Html.TextAreaFor(a => a.HeaderTbl.RequestNotes, new { @id = "RequestNotes", @class = "form-control", @readonly = "readonly" })
                            </div>
                            <div class="form-row">
                                <div class="col-md-6">
                                    <label>Status</label>
                                    @Html.TextBoxFor(a => a.HeaderTbl.Status, new { @id = "Status", @class = "form-control", @readonly = "readonly" })
                                </div>
                                <div class="col-md-6">
                                    <label>Priority</label>
                                    @Html.TextBoxFor(a => a.HeaderTbl.Priority, new { @id = "Priority", @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Detail Item</label>
                                <table id="tabel6" class="table table-striped" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>Item No</th>
                                            <th>Description</th>
                                            <th>Qty</th>
                                            <th>Unit Cost</th>
                                            <th>Cost Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                    <tfoot>
                                        <tr>
                                            <th colspan="4" style="text-align:right">Total:</th>
                                            <th></th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}