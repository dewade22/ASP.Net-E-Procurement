@model Balimoon_E_Procurement.Models.BalimoonBML.ViewModel.PurchaseRequestVM
@{
    ViewData["Title"] = "Edit Rejected PR";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>BalimOOn Liqueurs - Rejected</h2>
<section class="content">
    <div class="card">
        <div class="row">
            <div class="col-12">
                <div class="card-header">
                    <h3 class="card-title">Rejected @ViewBag.PRNO</h3>
                </div>
                <div class="card-body">
                    <form id="formBody">
                        <fieldset id="BodyFormValue">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                @Html.HiddenFor(a => a.HeaderTbl.RequisitionHeaderId, new { @id = "RequisitionHeaderId" })
                            </div>
                            <div class="form-row">
                                <div class="col-md-6">
                                    <label asp-for="HeaderTbl.RequisitionNo">PR No.</label>
                                    <input asp-for="HeaderTbl.RequisitionNo" id="RequisitionNo" class="form-control" disabled />
                                    <span asp-validation-for="HeaderTbl.RequisitionNo" class="text-danger"></span>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="HeaderTbl.RequesterId">Requester</label>
                                    <input asp-for="HeaderTbl.RequesterId" class="form-control" disabled />
                                    <span asp-validation-for="HeaderTbl.RequesterId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6">
                                    <label>Order Date</label>
                                    <input asp-for="HeaderTbl.OrderDate" id="orderDate" class="form-control" disabled />
                                    <span asp-validation-for="HeaderTbl.OrderDate" class="text-danger"></span>
                                </div>
                                <div class="col-md-6">
                                    <label>Due Date</label>
                                    <input asp-for="HeaderTbl.DueDate" id="dueDate" class="form-control" disabled />
                                    <span asp-validation-for="HeaderTbl.DueDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="ApprovalEntry.Message">Message From Rejecter</label>
                                <textarea asp-for="ApprovalEntry.Message" class="form-control" disabled></textarea>
                            </div>
                            <br />
                            <div class="form-row">
                                <div class="col-md-4"></div>
                                <div class="col-md-4">
                                    <a href="#" class="btn btn-success btn-block" id="TambahItem" data-toggle="modal" data-target="#ModalTambah"><i class="fa fa-cart-plus "></i> Add New Item</a>
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="card" id="card_tabel">
        <div class="row">
            <div class="col-12">
                <div class="card-header">
                    <h3 class="card-title">Item On @ViewBag.PRNO</h3>
                </div>
                <div class="card-body">
                    <table id="Tabel5" class="table table-success">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>No</th>
                                <th>Item Name</th>
                                <th>Description</th>
                                <th>UoM</th>
                                <th>Qty</th>
                                <th>Cost</th>
                                <th>Amount</th>
                                <th>Edit</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <th colspan="7" style="text-align:right">Total:</th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                    <br />
                    <br />
                    <br />
                    <div class="form-row">
                        <div class="col-md-3"></div>
                        <div class="col-md-6">
                            <button type="button" id="SendToApproval" class="btn btn-block btn-primary"><span class="fa fa-paper-plane"></span> Send To Approval Again</button>
                        </div>
                    </div>
                    <br />
                    <div class="form-row">
                        <div class="col-md-4"></div>
                        <div class="col-md-4">
                            <button type="button" id="back" class="btn btn-block btn-outline-danger"><span class="fa fa-arrow-alt-circle-left"></span> Back</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript" src="~/lib/fancybox/dist/jquery.fancybox.min.js"></script>
    <script>
        $(document).ready(function () {
            $.fn.dataTable.moment("DD/MM/YYYY HH:mm:ss");
            $.fn.dataTable.moment("DD/MM/YYYY");
            var RequisitionNo = document.getElementById('RequisitionNo').value;
            //Deklarasi Data Tabel
            $("#Tabel5").DataTable({
                //Design Layout
                stateSave: true,
                autoWidth: true,
                scrollX: true,

                //ServerSide
                processing: true,
                serverSide: true,

                //Paging Setup
                paging: true,

                //searching Setup
                searching: { regex: true },

                //ajax Filter
                ajax: {
                    url: "/PurchaseRequest/testing?RequisitionNo=" + RequisitionNo,
                    type: "POST",
                    contentType: "application/json",
                    dataType: "json",
                    data: function (d) {
                        return JSON.stringify(d);
                    }
                },

                //column definition
                columnDefs: [
                    { targets: "no-sort", orderable: false },
                    { targets: "no-search", searchable: false },
                    {
                        targets: "trim",
                        render: function (data, type, full, meta) {
                            if (type === "display") {
                                data = strtrunc(data, 10);
                            }
                            return data;
                        }
                    },
                    { targets: "data-type", type: "date-eu" }
                ],

                columns: [
                    { data: "RequisitionLineId", isIdentity: true, visible: false },
                    { data: "SeqLineNo" },
                    { data: "ItemName" },
                    { data: "Description" },
                    { data: "UnitOfMeasure" },
                    { data: "Quantity" },
                    { data: "UnitCost", render: $.fn.dataTable.render.number(',', '.', 2) },
                    { data: "Amount", render: $.fn.dataTable.render.number(',', '.', 2) },
                    {
                        render: function (data, type, full, meta) {
                            return "<a href='#' onclick='EditRecord(\"" + full.RequisitionLineId + "\")' class='btn btn-outline-info'><span class='fa fa-edit'></span></a>";
                        }
                    },
                    {
                        render: function (data, type, full, meta) {
                            return "<a href='#' onclick='DeleteRecord(\"" + full.RequisitionLineId + "\")' class='btn btn-outline-danger'><span class='fa fa-trash-alt'></span></a>";
                        }
                    }
                ],
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;
                    var numFormat = $.fn.dataTable.render.number('\,', '.', 2).display;
                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Total over all pages
                    total = api
                        .column(7)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    $(api.column(7).footer()).html(
                        numFormat(total)
                    );
                }
            })
            $(".dataTables_scrollHeadInner").css({ "width": "100%" });
            $(".table ").css({ "width": "100%" });

            //Dinamis description di form add line
            $('#AddRecordNo').on('change', function () {
                $('#AddDescription').val($("#AddRecordNo option:selected").text());
            });

            // dinamis select list UoM Add
            $('#AddRecordNo').on('change', function () {
                var recNo = $('#AddRecordNo').val();
                var link = "/PurchaseRequest/GetDynamicUOM?id=" + recNo;
                $.ajax({
                    type: "GET",
                    url: link,
                    success: function (data) {
                        var obj = JSON.parse(data);
                        $("#AddUOM").val(obj.UoM);
                        $("#AddUOM").trigger("chosen:updated");
                        $("#AddUnitPrice").val(obj.UnitCost);

                    }
                })
            })

            //Dinamis description di form Edit line
            $('#EditRecordNo').on('change', function () {
                $('#EditDescription').val($("#EditRecordNo option:selected").text());
            });

            // dinamis select list UoM Add
            $('#EditRecordNo').on('change', function () {
                var recNo = $('#EditRecordNo').val();
                var link = "/PurchaseRequest/GetDynamicUOM?id=" + recNo;
                $.ajax({
                    type: "GET",
                    url: link,
                    success: function (data) {
                        var obj = JSON.parse(data);
                        $("#EditUOM").val(obj.UoM);
                        $("#EditUOM").trigger("chosen:updated");
                        $("#EditUnitPrice").val(obj.UnitCost);
                    }
                })
            })
        })
    </script>

    <script>
        //Untuk Form Tambah
        $("#ModalTambah form").validate({
            rules: {
                AddRecordType: {
                    required: true
                }
            },
            submitHandler: function (form) {
                var namaPR = document.getElementById('RequisitionNo').value;
                Swal.fire({
                    title: 'Add New Items',
                    text: 'Are You Sure Want To Add New Item in ' + namaPR + ' ?',
                    type: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#002afc',
                    cancelButtonColor: '#fc0303',
                    confirmButtonText: 'Add!',
                    cancelButtonText: 'Batal'
                }).then((result) => {
                    var formData = new FormData($(form)[0]);
                    if (result.value) {
                        $.ajax({
                            type: "POST",
                            url: "/PurchaseRequest/AddPRonReject",
                            data: formData,
                            processData: false,
                            contentType: false,
                            success: function (result) {
                                if (result == "Sukses") {
                                    Swal.fire(
                                        'Added!',
                                        'Your file has been saved.',
                                        'success'
                                    ).then((result) => {
                                        window.location.href = "/PurchaseRequest/ShowEdit?RequisitionNo=" + namaPR;
                                        $("#ModalTambah").modal("hide");
                                    })
                                } else {
                                    Swal.fire({
                                        type: 'error',
                                        title: 'Oops...',
                                        text: 'Something went wrong!',
                                        footer: '' + result
                                    })
                                }
                            }
                        })
                    }
                })
            }
        })
    </script>

    <script>
        function EditRecord(RequisitionLineId) {
            var link = "/PurchaseRequest/EditLineReject?RequisitionLineId=" + RequisitionLineId;
            var PRNumber = document.getElementById('RequisitionNo');
            $("#ModalEdit").modal();
            $.ajax({
                type: "GET",
                url: link,
                success: function (data) {
                    var obj = JSON.parse(data);
                    $("#JudulModalEdit").html("Edit " + obj.DocumentNo + " No " + obj.SeqLineNo);
                    $("#EditRequisitionHeaderIdEdit").val(obj.RequisitionheaderId);
                    $("#EditRequisitionLineID").val(obj.RequisitionLineId);
                    $("#EditSeqLineNo").val(obj.SeqLineNo);
                    $("#EditRecordType").val(obj.RecordType);
                    $("#EditRecordType").trigger("chosen:updated");
                    $("#EditRecordNo").val(obj.RecordNo);
                    $("#EditRecordNo").trigger("chosen:updated");
                    $("#EditDescription").val(obj.Description);
                    $("#EditQuantity").val(obj.Quantity);
                    $("#EditUOM").val(obj.UnitofMeasure);
                    $("#EditUOM").trigger("chosen:updated");
                    $("#EditUnitPrice").val(obj.DirectUnitCost);
                    $("#EditVendors").val(obj.VendorNo);
                    $("#EditVendors").trigger("chosen:updated");
                    $("#EditRequestNotes").val(obj.RequestNotes);
                    var imagesrc = "/Images/PRImages/default.jpg";
                    if (obj.Picture == null) {
                        $("#gambar-link").attr("href", imagesrc);
                        $("#gambar").attr("src", imagesrc);
                    } else {
                        imagesrc = "/Images/PRImages/" + obj.Picture;
                        $("#gambar-link").attr("href", imagesrc);
                        $("#gambar").attr("src", imagesrc);
                    }
                }
            })
        }
    </script>

    <script>
        //Untuk Form Edit
        $("#ModalEdit form").validate({
            rules: {
                EditRecordType: {
                    required: true
                }
            },
            submitHandler: function (form) {
                var namaPR = document.getElementById('RequisitionNo').value;
                Swal.fire({
                    title: 'Update Items',
                    text: 'Are You Sure Want To Update ' + namaPR + ' ?',
                    type: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#002afc',
                    cancelButtonColor: '#fc0303',
                    confirmButtonText: '<i class="fa fa-edit"></i> Update',
                    cancelButtonText: '<i class="fa fa-ban"></i> Cancel'
                }).then((result) => {
                    var formData = new FormData($(form)[0]);
                    if (result.value) {
                        $.ajax({
                            type: "POST",
                            url: "/PurchaseRequest/EditLineProcess",
                            data: formData,
                            processData: false,
                            contentType: false,
                            success: function (result) {
                                if (result == "Sukses") {
                                    Swal.fire(
                                        'Saved!',
                                        'Your file has been saved.',
                                        'success'
                                    ).then((result) => {
                                        window.location.href = "/PurchaseRequest/ShowEdit?RequisitionNo=" + namaPR;
                                        $("#ModalEdit").modal("hide");
                                    })
                                } else {
                                    Swal.fire({
                                        type: 'error',
                                        title: 'Oops...',
                                        text: 'Something went wrong!',
                                        footer: '' + result
                                    })
                                }
                            }
                        })
                    }
                })
            }
        })
    </script>

    <script>
        function DeleteRecord(RequisitionLineId) {
            var reqNo = document.getElementById('RequisitionNo').value;
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '<i class="fa fa-eraser"></i> Yes, Delete!',
                cancelButtonText: '<i class="fa fa-ban"></i> Cancel'
            }).then((result) => {
                $.ajax({
                    type: "POST",
                    url: "/PurchaseRequest/DisposeLine?RequisitionLineId=" + RequisitionLineId,
                    success: function (result) {
                        if (result == "Sukses") {
                            Swal.fire(
                                'Deleted!',
                                'Your file has been deleted.',
                                'success'
                            ).then((result) => {
                                window.location.href = "/PurchaseRequest/ShowEdit?RequisitionNo=" + reqNo;
                            })
                        } else {
                            Swal.fire({
                                type: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong!',
                                footer: 'Failed To Delete Item'
                            })
                        }
                    }
                })
            })
        }
    </script>

    <script>
        $("#SendToApproval").click(function () {
            Swal.fire({
                title: 'Send To Approval?',
                text: "You want to Send This PR into Approval?",
                type: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '<i class="fa fa-paper-plane"></i> Send!',
                cancelButtonText: '<i class="fa fa-ban"></i> Cancel'
            }).then((result) => {
                $.ajax({
                    type: "POST",
                    url: "/PurchaseRequest/SaveRejectedProcess",
                    data: $("#BodyFormValue").serialize(),
                    success: function (result) {
                        if (result == "Sukses") {
                            Swal.fire(
                                'Send!',
                                'Your PR Has Been Sent',
                                'success'
                            ).then((result) => {
                                window.location.href = "/PurchaseRequest/MyRejectedPR";
                            })
                        }
                        else {
                            Swal.fire({
                                type: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong!',
                                footer: '' + result
                            })
                        }
                    }
                })
            })

        })
    </script>
    <script>
        $("#back").click(function () {
            window.location.href = "/PurchaseRequest/MyRejectedPR";
        })
    </script>
    <script>
        //Script For Chosen
        $("#AddRecordType").chosen();
        $("#AddRecordNo").chosen();
        $("#AddUOM").chosen();
        $("#AddVendors").chosen();
        $("#EditRecordType").chosen();
        $("#EditRecordNo").chosen();
        $("#EditUOM").chosen();
        $("#EditVendors").chosen();

        $('.chosen-container').css('width', '100%');
    </script>
<script>
    $("#gambar-link").fancybox({});
</script>
}

@section Styles{
    <link rel="stylesheet" href="~/lib/fancybox/dist/jquery.fancybox.min.css" />
    <!-- Modal Tambah-->
    <div class="modal fade bd-example-modal-lg" id="ModalTambah">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="JudulModalAdd">Add New PR</h4>
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                </div>
                <div class="modal-body">
                    <form id="FormTambah" role="form">
                        <fieldset id="SubmitFormEdit">
                            @Html.HiddenFor(a => a.HeaderTbl.RequisitionNo, new { @id = "AddRequisitionNo" })
                            <div class="form-row">
                                <div class="col-6">
                                    <label>Record Type</label>
                                    @Html.DropDownListFor(a => a.LineTbl.RecordType, ViewBag.ListOfRecordType as SelectList, "", new { @id = "AddRecordType", @class = "form-control", @required = "required" })
                                </div>
                                <div class="col-6">
                                    <label>Description</label>
                                    @Html.DropDownListFor(a => a.LineTbl.RecordNo, ViewBag.ListOfRecordNo as SelectList, "", new { @id = "AddRecordNo", @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Description</label>
                                @Html.TextAreaFor(a => a.LineTbl.Description, new { @id = "AddDescription", @class = "form-control", @required = "required" })
                            </div>
                            <div class="form-row">
                                <div class="col-6">
                                    <label>Quantity</label>
                                    @Html.TextBoxFor(a => a.LineTbl.Quantity, new { @id = "AddQuantity", @class = "form-control", @type = "number", @required = "required" })
                                </div>
                                <div class="col-6">
                                    <label>Unit of Measure</label>
                                    @Html.DropDownListFor(a => a.LineTbl.UnitofMeasure, ViewBag.ListOfUOM as SelectList, "", new { @id = "AddUOM", @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-6">
                                    <label>Expected Price</label>
                                    @Html.TextBoxFor(a => a.LineTbl.UnitCost, new { @id = "AddUnitPrice", @class = "form-control", @required = "required" })
                                </div>
                                <div class="col-6">
                                    <label>Vendor Name</label>
                                    @Html.DropDownListFor(a => a.LineTbl.VendorNo, ViewBag.ListOfVendors as SelectList, "", new { @id = "AddVendors", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Per Item Request Note</label>
                                @Html.TextAreaFor(a => a.LineTbl.RequestNotes, new { @id = "AddRequestNotes", @class = "form-control", @placeholder = "Optional" })
                            </div>
                            <div class="form-row">
                                <div class="col-md-6">
                                    <label>Images (1.5MB Max Size)</label>
                                    <input type="file" name="file" class="btn" id="file-location" />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary"><span class="fa fa-save"></span> Save</button>
                            </div>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!--Modal Edit-->
    <div class="modal fade bd-example-modal-lg" id="ModalEdit">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="JudulModalEdit"></h4>
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                </div>
                <div class="modal-body">
                    <form id="form-edit" role="form" enctype="multipart/form-data">
                        <fieldset id="SubmitFormEdit">
                            @Html.HiddenFor(a => a.LineTbl.RequisitionheaderId, new { @id = "EditRequisitionHeaderIdEdit" })
                            @Html.HiddenFor(a => a.LineTbl.RequisitionLineId, new { @id = "EditRequisitionLineID" })
                            @Html.HiddenFor(a => a.LineTbl.SeqLineNo, new { @id = "EditSeqLineNo" })
                            <div class="form-row">
                                <div class="col-6">
                                    <label>Record Type</label>
                                    @Html.DropDownListFor(a => a.LineTbl.RecordType, ViewBag.ListOfRecordType as SelectList, "", new { @id = "EditRecordType", @class = "form-control", @required = "required" })
                                </div>
                                <div class="col-6">
                                    <label>Description</label>
                                    @Html.DropDownListFor(a => a.LineTbl.RecordNo, ViewBag.ListOfRecordNo as SelectList, "", new { @id = "EditRecordNo", @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Description</label>
                                @Html.TextAreaFor(a => a.LineTbl.Description, new { @id = "EditDescription", @class = "form-control", @required = "required" })
                            </div>
                            <div class="form-row">
                                <div class="col-6">
                                    <label>Quantity</label>
                                    @Html.TextBoxFor(a => a.LineTbl.Quantity, new { @id = "EditQuantity", @class = "form-control", @type = "number", @required = "required" })
                                </div>
                                <div class="col-6">
                                    <label>Unit of Measure</label>
                                    @Html.DropDownListFor(a => a.LineTbl.UnitofMeasure, ViewBag.ListOfUOM as SelectList, "", new { @id = "EditUOM", @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-6">
                                    <label>Expected Price</label>
                                    @Html.TextBoxFor(a => a.LineTbl.UnitCost, new { @id = "EditUnitPrice", @class = "form-control", @type = "number", @required = "required" })
                                </div>
                                <div class="col-6">
                                    <label>Vendor Name</label>
                                    @Html.DropDownListFor(a => a.LineTbl.VendorNo, ViewBag.ListOfVendors as SelectList, "", new { @id = "EditVendors", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Per Item Request Note</label>
                                @Html.TextAreaFor(a => a.LineTbl.RequestNotes, new { @id = "EditRequestNotes", @class = "form-control", @placeholder = "Optional" })
                            </div>
                            <div class="form-group">
                                <label id="label-gambar"><span class="fa fa-images">Item Image</span></label><br />
                                <a id="gambar-link" data-fancybox data-caption="Image On This PR">
                                    <img id="gambar" title="Item Image" alt="Item Image" style="width:500px" />
                                </a>
                            </div>
                            <div class="form-row">
                                <div class="col-md-6">
                                    <label>Images (1.5MB Max Size)</label>
                                    <input type="file" name="file" class="btn" id="file-location-edit" />
                                </div>
                            </div>
                        </fieldset>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-danger" id="BtnEdit"><span class="fa fa-save"> Save</span></button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}